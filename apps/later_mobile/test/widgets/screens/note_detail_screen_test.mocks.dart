// Mocks generated by Mockito 5.4.4 from annotations
// in later_mobile/test/widgets/screens/note_detail_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:ui' as _i8;

import 'package:later_mobile/data/models/item_model.dart' as _i5;
import 'package:later_mobile/data/models/list_model.dart' as _i4;
import 'package:later_mobile/data/models/space_model.dart' as _i9;
import 'package:later_mobile/data/models/todo_list_model.dart' as _i3;
import 'package:later_mobile/providers/content_provider.dart' as _i2;
import 'package:later_mobile/providers/spaces_provider.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ContentProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockContentProvider extends _i1.Mock implements _i2.ContentProvider {
  MockContentProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i3.TodoList> get todoLists =>
      (super.noSuchMethod(
            Invocation.getter(#todoLists),
            returnValue: <_i3.TodoList>[],
          )
          as List<_i3.TodoList>);

  @override
  List<_i4.ListModel> get lists =>
      (super.noSuchMethod(
            Invocation.getter(#lists),
            returnValue: <_i4.ListModel>[],
          )
          as List<_i4.ListModel>);

  @override
  List<_i5.Item> get notes =>
      (super.noSuchMethod(Invocation.getter(#notes), returnValue: <_i5.Item>[])
          as List<_i5.Item>);

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i6.Future<void> loadSpaceContent(String? spaceId) =>
      (super.noSuchMethod(
            Invocation.method(#loadSpaceContent, [spaceId]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> createTodoList(
    _i3.TodoList? todoList,
    _i7.SpacesProvider? spacesProvider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createTodoList, [todoList, spacesProvider]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> updateTodoList(_i3.TodoList? todoList) =>
      (super.noSuchMethod(
            Invocation.method(#updateTodoList, [todoList]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> deleteTodoList(
    String? id,
    _i7.SpacesProvider? spacesProvider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTodoList, [id, spacesProvider]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> addTodoItem(String? listId, _i3.TodoItem? item) =>
      (super.noSuchMethod(
            Invocation.method(#addTodoItem, [listId, item]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> updateTodoItem(
    String? listId,
    String? itemId,
    _i3.TodoItem? item,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateTodoItem, [listId, itemId, item]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> deleteTodoItem(String? listId, String? itemId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTodoItem, [listId, itemId]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> toggleTodoItem(String? listId, String? itemId) =>
      (super.noSuchMethod(
            Invocation.method(#toggleTodoItem, [listId, itemId]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> reorderTodoItems(
    String? listId,
    int? oldIndex,
    int? newIndex,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reorderTodoItems, [listId, oldIndex, newIndex]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> createList(
    _i4.ListModel? list,
    _i7.SpacesProvider? spacesProvider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createList, [list, spacesProvider]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> updateList(_i4.ListModel? list) =>
      (super.noSuchMethod(
            Invocation.method(#updateList, [list]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> deleteList(String? id, _i7.SpacesProvider? spacesProvider) =>
      (super.noSuchMethod(
            Invocation.method(#deleteList, [id, spacesProvider]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> addListItem(String? listId, _i4.ListItem? item) =>
      (super.noSuchMethod(
            Invocation.method(#addListItem, [listId, item]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> updateListItem(
    String? listId,
    String? itemId,
    _i4.ListItem? item,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateListItem, [listId, itemId, item]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> deleteListItem(String? listId, String? itemId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteListItem, [listId, itemId]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> toggleListItem(String? listId, String? itemId) =>
      (super.noSuchMethod(
            Invocation.method(#toggleListItem, [listId, itemId]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> reorderListItems(
    String? listId,
    int? oldIndex,
    int? newIndex,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reorderListItems, [listId, oldIndex, newIndex]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> createNote(
    _i5.Item? note,
    _i7.SpacesProvider? spacesProvider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createNote, [note, spacesProvider]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> updateNote(_i5.Item? note) =>
      (super.noSuchMethod(
            Invocation.method(#updateNote, [note]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> deleteNote(String? id, _i7.SpacesProvider? spacesProvider) =>
      (super.noSuchMethod(
            Invocation.method(#deleteNote, [id, spacesProvider]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  List<dynamic> getFilteredContent(_i2.ContentFilter? filter) =>
      (super.noSuchMethod(
            Invocation.method(#getFilteredContent, [filter]),
            returnValue: <dynamic>[],
          )
          as List<dynamic>);

  @override
  int getTotalCount() =>
      (super.noSuchMethod(Invocation.method(#getTotalCount, []), returnValue: 0)
          as int);

  @override
  List<dynamic> search(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#search, [query]),
            returnValue: <dynamic>[],
          )
          as List<dynamic>);

  @override
  List<_i3.TodoList> getTodosWithDueDate(DateTime? date) =>
      (super.noSuchMethod(
            Invocation.method(#getTodosWithDueDate, [date]),
            returnValue: <_i3.TodoList>[],
          )
          as List<_i3.TodoList>);

  @override
  void clearError() => super.noSuchMethod(
    Invocation.method(#clearError, []),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i8.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i8.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [SpacesProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockSpacesProvider extends _i1.Mock implements _i7.SpacesProvider {
  MockSpacesProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i9.Space> get spaces =>
      (super.noSuchMethod(
            Invocation.getter(#spaces),
            returnValue: <_i9.Space>[],
          )
          as List<_i9.Space>);

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i6.Future<void> loadSpaces({bool? includeArchived = false}) =>
      (super.noSuchMethod(
            Invocation.method(#loadSpaces, [], {
              #includeArchived: includeArchived,
            }),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> addSpace(_i9.Space? space) =>
      (super.noSuchMethod(
            Invocation.method(#addSpace, [space]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> updateSpace(_i9.Space? space) =>
      (super.noSuchMethod(
            Invocation.method(#updateSpace, [space]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> deleteSpace(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteSpace, [id]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> switchSpace(String? spaceId) =>
      (super.noSuchMethod(
            Invocation.method(#switchSpace, [spaceId]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> incrementSpaceItemCount(String? spaceId) =>
      (super.noSuchMethod(
            Invocation.method(#incrementSpaceItemCount, [spaceId]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> decrementSpaceItemCount(String? spaceId) =>
      (super.noSuchMethod(
            Invocation.method(#decrementSpaceItemCount, [spaceId]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  void clearError() => super.noSuchMethod(
    Invocation.method(#clearError, []),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i8.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i8.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
